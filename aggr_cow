#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

bool ispossible(vector<int>& v, int n, int c, int mid){
    int coord = v[0];
    int cnt = 1;
    for(int i = 1; i < n; i++){
        if (v[i] - coord >= mid){
            cnt++;
            coord = v[i];
        }
        if (cnt == c) return true;
    }
    return false;
}

int bs(vector<int>& v, int n, int c){
    sort(v.begin(), v.end());
    int l = 1;
    int r = v[v.size() - 1] - v[0];
    int res = -1;
    while (l <= r){
        int mid = l + (r - l) / 2;
        if (ispossible(v, n, c, mid)) {
            res = mid;
            l = mid + 1;
        }
        else{
            r = mid - 1;
        }
    }
    return res;
}

int main() {
    int t;
    cin >> t

    for(int i = 0; i < t; i++){
        int N, C;
        cin >> N >> C;
        vector<int> v(N, 0);
        for(int j = 0; j < N; j++){
            cin >> v[j];
        }
        int ans = bs(v, N, C);
        cout << ans << endl;
    }
    return 0;
}
